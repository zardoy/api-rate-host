generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Host {
    id          Int      @default(autoincrement()) @id
    description String
    name        String
    ownerUserId Int
    site        String
    createdAt   DateTime @default(now())

    hostMembers   HostMember[]
    overallRating OverallRating?
    userRatings   UserRating[]
}

model DeletedHost {
    hostId    Int          @id
    reason    DeleteReason
    deletedAt DateTime     @default(now())
}

// deprecated
model ServerInfo {
    lastRatingUpdate DateTime @unique
}

model HostMember {
    hostId Int
    userId Int

    host Host @relation(fields: [hostId], references: [id])

    @@index([hostId], name: "hostId")
    @@unique([hostId, userId], name: "host_id_user_id_unique")
}

model OverallRating {
    billing Float?
    cpu     Float?
    general Float
    hostId  Int    @unique
    ram     Float?
    support Float?

    host Host @relation(fields: [hostId], references: [id])
}

model UserRating {
    ratingId Int    @default(autoincrement()) @id
    general  Float
    billing  Float?
    cpu      Float?
    ram      Float?
    support  Float?
    hostId   Int
    userId   Int
    host     Host   @relation(fields: [hostId], references: [id])

    userReview UserReview?

    @@index([hostId], name: "hostId")
    @@unique([hostId, userId], name: "host_id_user_id_unique")
}

model UserReview {
    reviewId  Int       @default(autoincrement()) @id
    text      String
    karma     Int       @default(0)
    // userFullName String
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
    ratingId  Int       @unique

    userRating      UserRating       @relation(fields: [ratingId], references: [ratingId])
    userReviewVotes UserReviewVote[]
    userComments    UserComment[]
}

model UserComment {
    commentId   Int       @default(autoincrement()) @id
    reviewId    Int
    createdAt   DateTime  @default(now())
    updatedAt   DateTime? @updatedAt
    text        String
    toCommentId Int?
    userId      Int
    karma       Int       @default(0)
    // userFullName     String

    userReview       UserReview        @relation(fields: [reviewId], references: [reviewId])
    userCommentVotes UserCommentVote[]

    @@index([reviewId])
}

model UserReviewVote {
    reviewId Int
    userId   Int
    voteType VoteType

    userReview UserReview @relation(fields: [reviewId], references: [reviewId])

    @@index([reviewId])
    @@unique([reviewId, userId], name: "review_id_user_id_unique")
}

model UserCommentVote {
    commentId Int
    userId    Int
    voteType  VoteType

    userComments UserComment @relation(fields: [commentId], references: [commentId])

    @@index([commentId])
    @@unique([commentId, userId], name: "comment_id_user_id_unique")
}

enum VoteType {
    UP
    DOWN
}

enum DeleteReason {
    OWNER
    REPORT
}
