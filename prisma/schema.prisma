generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Host {
    description   String
    id            Int            @default(autoincrement()) @id
    name          String
    ownerUserId   Int
    site          String
    hostMembers   HostMember[]
    overallRating OverallRating?
    userRatings   UserRating[]
}

model DeletedHost {
    id         Int      @id
    deleteTime DateTime @default(now())
}

// deprecated
model ServerInfo {
    lastRatingUpdate DateTime @unique
}

model HostMember {
    hostId Int
    userId Int
    host   Host @relation(fields: [hostId], references: [id])

    @@index([hostId], name: "hostId")
    @@unique([hostId, userId], name: "host_id_user_id_unique")
}

model OverallRating {
    billing Float?
    cpu     Float?
    general Float
    hostId  Int    @unique
    ram     Float?
    support Float?
    host    Host   @relation(fields: [hostId], references: [id])
}

model UserComment {
    commentId        Int               @default(autoincrement()) @id
    ratingId         Int
    createTime       DateTime          @default(now())
    text             String
    toCommentId      Int?
    userId           Int
    userRating       UserRating        @relation(fields: [ratingId], references: [ratingId])
    karma            Int               @default(0)
    userVoteComments UserVoteComment[]

    @@index([ratingId], name: "ratingId")
}

model UserRating {
    ratingId     Int               @default(autoincrement()) @id
    general      Float
    billing      Float?
    cpu          Float?
    ram          Float?
    support      Float?
    hostId       Int
    userId       Int
    host         Host              @relation(fields: [hostId], references: [id])
    userComments UserComment[]
    userReview   UserReview?
    userVotes    UserVoteRatings[]

    @@index([hostId], name: "hostId")
    @@unique([hostId, userId], name: "host_id_user_id_unique")
}

model UserVoteRatings {
    ratingId   Int
    userId     Int
    voteType   VoteType
    userRating UserRating @relation(fields: [ratingId], references: [ratingId])

    @@index([ratingId], name: "ratingId")
    @@unique([ratingId, userId], name: "rating_id_user_id_unique")
}

model UserVoteComment {
    commentId    Int
    userId       Int
    voteType     VoteType
    userComments UserComment @relation(fields: [commentId], references: [commentId])

    @@index([commentId], name: "commentId")
    @@unique([commentId, userId], name: "comment_id_user_id_unique")
}

model UserReview {
    ratingId   Int        @unique
    text       String
    karma      Int        @default(0)
    createTime DateTime   @default(now())
    userRating UserRating @relation(fields: [ratingId], references: [ratingId])
}

enum VoteType {
    UPVOTE
    DOWNVOTE
}
