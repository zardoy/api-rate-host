### This file was generated by Nexus Schema
### Do not make changes to this file directly


type componentRating {
  billing: String
  cpu: String
  ram: String
  support: String
}

input ComponentRatings {
  billing: Int!
  cpu: Int!
  ram: Int!
  support: Int!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type HostDetails {
  componentRating: componentRating!
  myRating: Int
}

type HostList {
  description: String!
  id: Int!
  name: String!

  """Float actually"""
  rating: String!
  site: String!
  votesCount: Int!
}

type HostsCustomPagination {
  edges: [HostList!]!
}

"""
The `JSON` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

type Me {
  """Which host user belongs to"""
  hostId: Int

  """NULL if user is not host owner"""
  membersCount: Int
  role: UserRole!
}

type Mutation {
  addMember(userId: String!): Boolean
  createComment(responseToCommentId: Int, reviewId: Int!, text: String!): UserComment!
  createOrUpdateRating(
    componentRatings: ComponentRatings

    """All ratings must be in range 1-10 inclusive"""
    generalRating: Int
    hostId: Int!
  ): UserRatingId!
  createOrUpdateReview(hostId: Int!, text: String!): Boolean!
  deleteComment(commentId: Int!): Boolean

  """User must be notified that this action also drops his review"""
  deleteRating(hostId: Int!): Boolean!
  deleteReview(hostId: Int!): Boolean!
  removeMember(userId: String!): Boolean
  updateComment(commentId: Int!, text: String!): Boolean!
}

type Query {
  comments(first: Int!, offset: Int!, reviewId: Int!, searchQuery: String): UserCommentsCustomPagination
  hostDetails(id: Int!): HostDetails!

  """List of user ids. Only for HOST_OWNER role!"""
  hostMembers: [Int!]!
  hosts(
    """ZERO based"""
    first: Int!
    offset: Int!
    searchQuery: String
  ): HostsCustomPagination!
  me: Me
  reviews(first: Int!, hostId: Int!, offset: Int!): ReviewsCustomPagination!
  reviewsTotalCount(hostId: Int!): Int

  """For advanced use."""
  suspendedHostName(id: Int!): String
}

type ReviewsCustomPagination {
  edges: [UserReview!]!
}

type UserComment {
  author: UserData!
  commentId: Int!
  createdAt: DateTime!
  karma: Int!
  myVote: VoteType
  text: String!
  toCommentId: Int!
  updatedAt: DateTime
}

type UserCommentsCustomPagination {
  edges: [UserComment!]!
}

type UserData {
  fullName: String!
  id: String!
  isFromHoster: Boolean!
}

type UserRatingId {
  ratingId: Int!
}

type UserReview {
  commentsCount: Int!
  createdAt: DateTime!
  generalRating: Int!
  karma: Int
  myVote: VoteType
  reviewId: Int!
  text: String!
  updatedAt: DateTime
}

enum UserRole {
  HOST_MEMBER
  HOST_OWNER
  USER
}

enum VoteType {
  DOWN
  UP
}
